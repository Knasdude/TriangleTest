
package org.example;

/**
 * Represents an equilateral triangle
 */
public class EquilateralTriangle extends Triangle implements Shape {

    private static final double smallDiff = 0.0001;

    /**
     * Constructor for an EquilateralTriangle
     *
     * @param point1 X and Y coordinate of the first point
     * @param point2 X and Y coordinate of the second point
     * @param point3 X and Y coordinate of the third point
     * @throws Exception If the triangle is not equilateral
     */
    public EquilateralTriangle(Point point1, Point point2, Point point3) throws Exception {
        super(point1, point2, point3);

        double[] sides = getSides();
        if (!(Math.abs(sides[0] - sides[1]) < smallDiff && Math.abs(sides[0] - sides[2]) < smallDiff && Math.abs(sides[1] - sides[2]) < smallDiff)) {
            throw new Exception("Not an Equilateral triangle");
        }

    }

        @Override
        public double getCircumference () {
            double[] sides = getSides();
            return sides[0] + sides[1] + sides[2];
        }
    }
